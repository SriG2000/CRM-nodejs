{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class CrmService {\n  constructor(http) {\n    this.http = http;\n  }\n  getTemplates() {\n    return this.http.get('/api/templates');\n  }\n  createTemplate(template) {\n    return this.http.post('/api/templates', template);\n  }\n  getTimeIntervals() {\n    return this.http.get('/api/time-intervals');\n  }\n  saveCampaign(payload) {\n    return this.http.post('/api/campaigns', payload);\n  }\n  static {\n    this.ɵfac = function CrmService_Factory(t) {\n      return new (t || CrmService)(i0.ɵɵinject(i1.HttpClient));\n    };\n  }\n  static {\n    this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n      token: CrmService,\n      factory: CrmService.ɵfac,\n      providedIn: 'root'\n    });\n  }\n}","map":{"version":3,"names":["CrmService","constructor","http","getTemplates","get","createTemplate","template","post","getTimeIntervals","saveCampaign","payload","i0","ɵɵinject","i1","HttpClient","factory","ɵfac","providedIn"],"sources":["/Users/srivatsavgopinath/CRM-nodejs/frontend/src/app/crm.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable } from 'rxjs';\n\nexport interface EmailTemplate {\n  id: string;\n  name: string;\n  description: string;\n  content: string;\n}\n\nexport interface TimeIntervalOption {\n  value: number;\n  label: string;\n}\n\nexport interface DripStep {\n  id: number;\n  template: string;\n  interval: number;\n  customInterval: number;\n}\n\nexport interface CampaignPayload {\n  name: string;\n  drips: Array<{\n    id: number;\n    template: string;\n    interval: number;\n  }>;\n}\n\n@Injectable({ providedIn: 'root' })\nexport class CrmService {\n  constructor(private readonly http: HttpClient) {}\n\n  getTemplates(): Observable<EmailTemplate[]> {\n    return this.http.get<EmailTemplate[]>('/api/templates');\n  }\n\n  createTemplate(template: { name: string; description: string; content: string }): Observable<EmailTemplate> {\n    return this.http.post<EmailTemplate>('/api/templates', template);\n  }\n\n  getTimeIntervals(): Observable<TimeIntervalOption[]> {\n    return this.http.get<TimeIntervalOption[]>('/api/time-intervals');\n  }\n\n  saveCampaign(payload: CampaignPayload): Observable<any> {\n    return this.http.post('/api/campaigns', payload);\n  }\n}\n"],"mappings":";;AAiCA,OAAM,MAAOA,UAAU;EACrBC,YAA6BC,IAAgB;IAAhB,KAAAA,IAAI,GAAJA,IAAI;EAAe;EAEhDC,YAAYA,CAAA;IACV,OAAO,IAAI,CAACD,IAAI,CAACE,GAAG,CAAkB,gBAAgB,CAAC;EACzD;EAEAC,cAAcA,CAACC,QAAgE;IAC7E,OAAO,IAAI,CAACJ,IAAI,CAACK,IAAI,CAAgB,gBAAgB,EAAED,QAAQ,CAAC;EAClE;EAEAE,gBAAgBA,CAAA;IACd,OAAO,IAAI,CAACN,IAAI,CAACE,GAAG,CAAuB,qBAAqB,CAAC;EACnE;EAEAK,YAAYA,CAACC,OAAwB;IACnC,OAAO,IAAI,CAACR,IAAI,CAACK,IAAI,CAAC,gBAAgB,EAAEG,OAAO,CAAC;EAClD;;;uBAjBWV,UAAU,EAAAW,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,UAAA;IAAA;EAAA;;;aAAVd,UAAU;MAAAe,OAAA,EAAVf,UAAU,CAAAgB,IAAA;MAAAC,UAAA,EADG;IAAM;EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}